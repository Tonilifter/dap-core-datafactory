{
	"name": "TestE2EFilesGZIPPipeline",
	"properties": {
		"activities": [
			{
				"name": "OperationaLogStart",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "OperationalLogPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"nivel": "INFO",
						"modulo": {
							"value": "@variables('moduleName')",
							"type": "Expression"
						},
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logType": "START",
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"dataDate": {
							"value": "@variables('referenceDate')",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"sourceType": {
							"value": "@variables('sourceType')",
							"type": "Expression"
						},
						"uid": {
							"value": "@variables('uid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExecuteFilesGZIPPipeline",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Execute E2eStartSFTPServer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "FilesGZIPPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"referenceDate": {
							"value": "@variables('referenceDate')",
							"type": "Expression"
						},
						"sourceType": {
							"value": "@variables('sourceType')",
							"type": "Expression"
						},
						"package": {
							"value": "@pipeline().parameters.package",
							"type": "Expression"
						},
						"mock": {
							"value": "@pipeline().parameters.mock",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "OperationaLogEnd",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteFilesGZIPPipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "OperationalLogPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"nivel": "INFO",
						"modulo": {
							"value": "@variables('moduleName')",
							"type": "Expression"
						},
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logType": "END",
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"dataDate": {
							"value": "@variables('referenceDate')",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"sourceType": {
							"value": "@variables('sourceType')",
							"type": "Expression"
						},
						"uid": {
							"value": "@variables('uid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "OperationaLogEndError",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteFilesGZIPPipeline",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "OperationalLogPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"nivel": "ERROR",
						"modulo": {
							"value": "@variables('moduleName')",
							"type": "Expression"
						},
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logType": "END",
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"dataDate": {
							"value": "@variables('referenceDate')",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('ExecuteFilesGZIPPipeline: ', activity('ExecuteFilesGZIPPipeline').error.message)",
							"type": "Expression"
						},
						"sourceType": {
							"value": "@variables('sourceType')",
							"type": "Expression"
						},
						"uid": {
							"value": "@variables('uid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Execute E2eStartSFTPServer",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "OperationaLogStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "E2eStartSFTPServer",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Execute E2eStopSFTPServer",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExecuteFilesGZIPPipeline",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "E2eStopSFTPServer",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "OperationaLogEndStopFtpError",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Execute E2eStartSFTPServer",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "OperationalLogPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"nivel": "ERROR",
						"modulo": {
							"value": "@variables('moduleName')",
							"type": "Expression"
						},
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logType": "END",
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"dataDate": {
							"value": "@variables('referenceDate')",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Execute E2eStartSFTPServer: ', activity('Execute E2eStartSFTPServer').error.message)",
							"type": "Expression"
						},
						"sourceType": {
							"value": "@variables('sourceType')",
							"type": "Expression"
						},
						"uid": {
							"value": "@variables('uid')",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"applicationName": {
				"type": "string",
				"defaultValue": "AP_E2E_FTP_TESTS"
			},
			"region": {
				"type": "string",
				"defaultValue": "ESP"
			},
			"referenceDate": {
				"type": "string"
			},
			"package": {
				"type": "string",
				"defaultValue": "*"
			},
			"mock": {
				"type": "string",
				"defaultValue": "true"
			}
		},
		"variables": {
			"sourceType": {
				"type": "String",
				"defaultValue": "file"
			},
			"referenceDate": {
				"type": "String",
				"defaultValue": "@if(empty(pipeline().parameters.referenceDate),utcnow('yyyy/MM/dd'),pipeline().parameters.referenceDate)"
			},
			"uid": {
				"type": "String",
				"defaultValue": "@if(equals(pipeline().parameters.package, '*'), concat('TEST_E2E_EXTRACTION_FILES#$', pipeline().parameters.applicationName, '$_', pipeline().parameters.region, '#', if(empty(pipeline().parameters.referenceDate),utcnow('yyyy/MM/dd'),pipeline().parameters.referenceDate) , '#', utcnow('yyyyMMddHHmmssfff')), concat('EXTRACTION_FILES#', pipeline().parameters.package, '_$', pipeline().parameters.applicationName, '$_', pipeline().parameters.region, '#', if(empty(pipeline().parameters.referenceDate),utcnow('yyyy/MM/dd'),pipeline().parameters.referenceDate) , '#', utcnow('yyyyMMddHHmmssfff')))"
			},
			"moduleName": {
				"type": "String",
				"defaultValue": "TEST_E2E_EXTRACTION_FILES"
			}
		},
		"folder": {
			"name": "e2e_validation"
		},
		"annotations": []
	}
}