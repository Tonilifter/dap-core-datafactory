{
	"name": "CheckFile",
	"properties": {
		"activities": [
			{
				"name": "Check File Exists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DataLakeParquetCopyPeriodicallySink",
						"type": "DatasetReference",
						"parameters": {
							"p_dl_name": {
								"value": "@pipeline().parameters.p_dl_name",
								"type": "Expression"
							},
							"layer": {
								"value": "@concat('processed/', pipeline().parameters.layer)",
								"type": "Expression"
							},
							"app": {
								"value": "@pipeline().parameters.app",
								"type": "Expression"
							},
							"region": {
								"value": "@pipeline().parameters.region",
								"type": "Expression"
							},
							"dataset": {
								"value": "@pipeline().parameters.dataset",
								"type": "Expression"
							},
							"datadate": {
								"value": "@pipeline().parameters.filter_path",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureDataLakeStoreReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "FileExists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check File Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(activity('Check File Exists').output.exists,pipeline().parameters.overwrite_file)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CopyDataDls2",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureDataLakeStoreReadSettings",
										"recursive": true,
										"wildcardFileName": "*.*",
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureDataLakeStoreWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DataLakeBinaryCopyPeriodicallySource",
									"type": "DatasetReference",
									"parameters": {
										"p_dl_name": {
											"value": "@pipeline().parameters.p_dl_name",
											"type": "Expression"
										},
										"layer": {
											"value": "@pipeline().parameters.layer",
											"type": "Expression"
										},
										"app": {
											"value": "@pipeline().parameters.app",
											"type": "Expression"
										},
										"region": {
											"value": "@pipeline().parameters.region",
											"type": "Expression"
										},
										"dataset": {
											"value": "@pipeline().parameters.dataset",
											"type": "Expression"
										},
										"datadate": {
											"value": "@pipeline().parameters.filter_path",
											"type": "Expression"
										},
										"source_type": {
											"value": "@pipeline().parameters.source_type",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataLakeBinaryCopyPeriodicallySink",
									"type": "DatasetReference",
									"parameters": {
										"p_dl_name": {
											"value": "@pipeline().parameters.p_dl_name",
											"type": "Expression"
										},
										"layer": {
											"value": "@pipeline().parameters.layer",
											"type": "Expression"
										},
										"app": {
											"value": "@pipeline().parameters.app",
											"type": "Expression"
										},
										"region": {
											"value": "@pipeline().parameters.region",
											"type": "Expression"
										},
										"dataset": {
											"value": "@pipeline().parameters.dataset",
											"type": "Expression"
										},
										"datadate": {
											"value": "@pipeline().parameters.filter_path",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "CopyDataDls",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "DeleteFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureDataLakeStoreReadSettings",
										"recursive": true,
										"wildcardFileName": "*.*",
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureDataLakeStoreWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DataLakeBinaryCopyPeriodicallySource",
									"type": "DatasetReference",
									"parameters": {
										"p_dl_name": {
											"value": "@pipeline().parameters.p_dl_name",
											"type": "Expression"
										},
										"layer": {
											"value": "@pipeline().parameters.layer",
											"type": "Expression"
										},
										"app": {
											"value": "@pipeline().parameters.app",
											"type": "Expression"
										},
										"region": {
											"value": "@pipeline().parameters.region",
											"type": "Expression"
										},
										"dataset": {
											"value": "@pipeline().parameters.dataset",
											"type": "Expression"
										},
										"datadate": {
											"value": "@pipeline().parameters.filter_path",
											"type": "Expression"
										},
										"source_type": {
											"value": "@pipeline().parameters.source_type",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataLakeBinaryCopyPeriodicallySink",
									"type": "DatasetReference",
									"parameters": {
										"p_dl_name": {
											"value": "@pipeline().parameters.p_dl_name",
											"type": "Expression"
										},
										"layer": {
											"value": "@pipeline().parameters.layer",
											"type": "Expression"
										},
										"app": {
											"value": "@pipeline().parameters.app",
											"type": "Expression"
										},
										"region": {
											"value": "@pipeline().parameters.region",
											"type": "Expression"
										},
										"dataset": {
											"value": "@pipeline().parameters.dataset",
											"type": "Expression"
										},
										"datadate": {
											"value": "@pipeline().parameters.filter_path",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DeleteFile",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DataLakeParquetCopyPeriodicallySink",
									"type": "DatasetReference",
									"parameters": {
										"p_dl_name": {
											"value": "@pipeline().parameters.p_dl_name",
											"type": "Expression"
										},
										"layer": {
											"value": "@concat('processed/', pipeline().parameters.layer)",
											"type": "Expression"
										},
										"app": {
											"value": "@pipeline().parameters.app",
											"type": "Expression"
										},
										"region": {
											"value": "@pipeline().parameters.region",
											"type": "Expression"
										},
										"dataset": {
											"value": "@pipeline().parameters.dataset",
											"type": "Expression"
										},
										"datadate": {
											"value": "@pipeline().parameters.filter_path",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "*.parquet",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"business_unit": {
				"type": "string"
			},
			"layer": {
				"type": "string",
				"defaultValue": "raw"
			},
			"app": {
				"type": "string"
			},
			"region": {
				"type": "string",
				"defaultValue": "GLB"
			},
			"dataset": {
				"type": "string"
			},
			"datadate": {
				"type": "string"
			},
			"source_type": {
				"type": "string"
			},
			"p_folder_path": {
				"type": "string"
			},
			"p_file_name": {
				"type": "string"
			},
			"is_consolidated": {
				"type": "bool",
				"defaultValue": false
			},
			"p_dl_name": {
				"type": "string"
			},
			"output_dataset": {
				"type": "string"
			},
			"filter_path": {
				"type": "string"
			},
			"overwrite_file": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"folder": {
			"name": "utils"
		},
		"annotations": []
	}
}