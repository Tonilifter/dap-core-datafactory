{
	"name": "PISystemProcessPipeline",
	"properties": {
		"activities": [
			{
				"name": "HttpToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set appIdToken",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set appSecretToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://login.microsoftonline.com/0a25214f-ee52-483c-b96b-dc79f3227a6f/oauth2/v2.0/token",
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": {
						"value": "@concat('client_id=', variables('appIdToken'), '&client_secret=',  encodeUriComponent(variables('appSecretToken')), '&grant_type=client_credentials&scope=https://graph.microsoft.com/.default')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set appIdToken",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetAppIdToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "appIdToken",
					"value": {
						"value": "@activity('GetAppIdToken').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetAppIdToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set executionTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', replace(replace(pipeline().DataFactory, 'dfcore', ''),'ds', ''), 'corekv.vault.azure.net/secrets/adapp-extract-id?api-version=7.0')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "IntegrationRuntimeFreezer",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "GetAppSecretToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set executionTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', replace(replace(pipeline().DataFactory, 'dfcore', ''),'ds', ''), 'corekv.vault.azure.net/secrets/adsp-extract-secret?api-version=7.0')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "IntegrationRuntimeFreezer",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Set appSecretToken",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetAppSecretToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "appSecretToken",
					"value": {
						"value": "@activity('GetAppSecretToken').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set httpToken",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "HttpToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "httpToken",
					"value": {
						"value": "@activity('HttpToken').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "BuildBatchRequest",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set httpToken",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "OperationaLogStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://coreutils', replace(replace(pipeline().DataFactory, 'dfcore', ''),'ds', ''), 'akcore.cloudapp.repsol.com/dap-core-extraction-utils/pisystemrequest')",
						"type": "Expression"
					},
					"method": "GET",
					"headers": {
						"Content-Type": "text/plain",
						"X-Start-Time": {
							"value": "@pipeline().parameters.startTime",
							"type": "Expression"
						},
						"X-End-Time": {
							"value": "@pipeline().parameters.endTime",
							"type": "Expression"
						},
						"X-Extraction-Tool": {
							"value": "@variables('extractionTool')",
							"type": "Expression"
						},
						"X-Application-Name": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"X-Region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"X-PI-Server": {
							"value": "@pipeline().parameters.piServer",
							"type": "Expression"
						},
						"X-Mode": {
							"value": "@pipeline().parameters.mode",
							"type": "Expression"
						},
						"X-Interval": {
							"value": "@pipeline().parameters.interval",
							"type": "Expression"
						},
						"Authorization": {
							"value": "@concat('Bearer ', variables('httpToken'))",
							"type": "Expression"
						},
						"X-Execution-Time": {
							"value": "@variables('executionTime')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Set executionTime",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "executionTime",
					"value": {
						"value": "@formatDateTime(utcnow(),'yyyy-MM-ddTHH:mm:ssZ')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "OperationaLogStart",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "OperationalLogPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"nivel": "INFO",
						"modulo": {
							"value": "PROCESS_PI",
							"type": "Expression"
						},
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logType": "START",
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"dataDate": {
							"value": "@formatDateTime(utcnow(),'yyyy/MM/dd')",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"sourceType": {
							"value": "@variables('extractionTool')",
							"type": "Expression"
						},
						"uid": {
							"value": "@variables('uid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "If empty batchBodyPathList",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "BuildBatchRequest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(activity('BuildBatchRequest').output.batchBodyPathList)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "PISystemCommonPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PISystemCommonPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"applicationName": {
										"value": "@pipeline().parameters.applicationName",
										"type": "Expression"
									},
									"region": {
										"value": "@pipeline().parameters.region",
										"type": "Expression"
									},
									"piServer": {
										"value": "@pipeline().parameters.piServer",
										"type": "Expression"
									},
									"startTime": {
										"value": "@pipeline().parameters.startTime",
										"type": "Expression"
									},
									"endTime": {
										"value": "@pipeline().parameters.endTime",
										"type": "Expression"
									},
									"mode": {
										"value": "@pipeline().parameters.mode",
										"type": "Expression"
									},
									"interval": {
										"value": "@pipeline().parameters.interval",
										"type": "Expression"
									},
									"inputJSON": {
										"value": "@activity('BuildBatchRequest').output",
										"type": "Expression"
									},
									"historicalExecution": {
										"value": "@pipeline().parameters.historicalExecution",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "OperationaLogEnd",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "PISystemCommonPipeline",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "OperationalLogPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"nivel": "INFO",
									"modulo": {
										"value": "PROCESS_PI",
										"type": "Expression"
									},
									"pipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"logType": "END",
									"applicationName": {
										"value": "@pipeline().parameters.applicationName",
										"type": "Expression"
									},
									"dataDate": {
										"value": "@formatDateTime(utcnow(),'yyyy/MM/dd')",
										"type": "Expression"
									},
									"datasetName": "",
									"region": {
										"value": "@pipeline().parameters.region",
										"type": "Expression"
									},
									"sourceType": {
										"value": "@variables('extractionTool')",
										"type": "Expression"
									},
									"uid": {
										"value": "@variables('uid')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "OperationaLogEndKO",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "PISystemCommonPipeline",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "OperationalLogPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"nivel": "ERROR",
									"modulo": {
										"value": "PROCESS_PI",
										"type": "Expression"
									},
									"pipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"logType": "END",
									"applicationName": {
										"value": "@pipeline().parameters.applicationName",
										"type": "Expression"
									},
									"dataDate": {
										"value": "@formatDateTime(utcnow(),'yyyy/MM/dd')",
										"type": "Expression"
									},
									"region": {
										"value": "@pipeline().parameters.region",
										"type": "Expression"
									},
									"message": {
										"value": "@concat('ProcessPi: ', activity('PISystemCommonPipeline').error.message)",
										"type": "Expression"
									},
									"sourceType": {
										"value": "@variables('extractionTool')",
										"type": "Expression"
									},
									"uid": {
										"value": "@variables('uid')",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "OperationaLogEndEmptyBody",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "OperationalLogPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"nivel": "INFO",
									"modulo": {
										"value": "PROCESS_PI",
										"type": "Expression"
									},
									"pipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"logType": "END",
									"applicationName": {
										"value": "@pipeline().parameters.applicationName",
										"type": "Expression"
									},
									"dataDate": {
										"value": "@formatDateTime(utcnow(),'yyyy/MM/dd')",
										"type": "Expression"
									},
									"datasetName": "",
									"region": {
										"value": "@pipeline().parameters.region",
										"type": "Expression"
									},
									"message": "Empty batchBodyPathList",
									"sourceType": {
										"value": "@variables('extractionTool')",
										"type": "Expression"
									},
									"uid": {
										"value": "@variables('uid')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"applicationName": {
				"type": "string",
				"defaultValue": "AP_REF_PI"
			},
			"region": {
				"type": "string",
				"defaultValue": "ESP"
			},
			"piServer": {
				"type": "string"
			},
			"startTime": {
				"type": "string"
			},
			"endTime": {
				"type": "string"
			},
			"mode": {
				"type": "string",
				"defaultValue": "raw"
			},
			"interval": {
				"type": "string",
				"defaultValue": "5m"
			},
			"historicalExecution": {
				"type": "bool",
				"defaultValue": true
			}
		},
		"variables": {
			"extractionTool": {
				"type": "String",
				"defaultValue": "apis"
			},
			"appIdToken": {
				"type": "String"
			},
			"appSecretToken": {
				"type": "String"
			},
			"httpToken": {
				"type": "String"
			},
			"executionTime": {
				"type": "String"
			},
			"uid": {
				"type": "String",
				"defaultValue": "@concat('PROCESS_PI#$', pipeline().parameters.applicationName, '$_', pipeline().parameters.region, '#', formatDateTime(utcnow(),'yyyy/MM/dd') , '#', utcnow('yyyyMMddHHmmssfff'))"
			}
		},
		"folder": {
			"name": "extraction/pi"
		},
		"annotations": []
	}
}