{
	"name": "IngestionStreamingPipeline",
	"properties": {
		"activities": [
			{
				"name": "Ingest from Event Hub",
				"type": "DatabricksSparkJar",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"mainClassName": "com.repsol.datalake.ingestion.eventhub.EventHubDumperJob",
					"parameters": [
						"-a",
						"@pipeline().parameters.applicationName",
						"-r",
						"@pipeline().parameters.region",
						"-p",
						"N/A",
						"-u",
						"@variables('uid')",
						"-m",
						"@pipeline().parameters.mock"
					],
					"libraries": [
						{
							"jar": "dbfs:/FileStore/job-jars-ci/ingestion-jar-with-dependencies.jar"
						},
						{
							"maven": {
								"coordinates": "com.microsoft.azure:azure-eventhubs-spark_2.11:2.3.12"
							}
						},
						{
							"maven": {
								"coordinates": "com.microsoft.sqlserver:mssql-jdbc:7.0.0.jre8"
							}
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDynamicLinkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"workers": {
							"value": "@pipeline().parameters.workers",
							"type": "Expression"
						},
						"token": "dbcoar-databricks-token",
						"clusterVersion": "6.4.x-esr-scala2.11"
					}
				}
			},
			{
				"name": "ExecuteProcessorPipeline",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Ingest from Event Hub",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessorPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"extractionDate": {
							"value": "@formatDateTime(utcnow(),'yyyy/MM/dd')",
							"type": "Expression"
						},
						"parentUid": {
							"value": "@variables('uid')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "OperationaLogErrorIngestFromEventHub",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Ingest from Event Hub",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "OperationalLogPipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"nivel": "ERROR",
						"modulo": "INGESTION_STREAMING",
						"pipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logType": "END",
						"applicationName": {
							"value": "@pipeline().parameters.applicationName",
							"type": "Expression"
						},
						"dataDate": {
							"value": "@utcnow()",
							"type": "Expression"
						},
						"region": {
							"value": "@pipeline().parameters.region",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Ingest from Event Hub: ', activity('Ingest from Event Hub').error.message)",
							"type": "Expression"
						},
						"sourceType": {
							"value": "streaming",
							"type": "Expression"
						},
						"uid": {
							"value": "@variables('uid')",
							"type": "Expression"
						},
						"parentUid": {
							"value": "@pipeline().parameters.parentUid",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"applicationName": {
				"type": "String"
			},
			"region": {
				"type": "string",
				"defaultValue": "ESP"
			},
			"workers": {
				"type": "string",
				"defaultValue": "2:8"
			},
			"parentUid": {
				"type": "string"
			},
			"mock": {
				"type": "string",
				"defaultValue": "true"
			}
		},
		"variables": {
			"uid": {
				"type": "String",
				"defaultValue": "@concat('DUMPER#$', pipeline().parameters.applicationName, '$_', pipeline().parameters.region, '#', utcnow('yyyy/MM/dd'), '#', utcnow('yyyyMMddHHmmssfff'))"
			}
		},
		"folder": {
			"name": "ingestion"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}